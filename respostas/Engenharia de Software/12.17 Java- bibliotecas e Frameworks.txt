Item do edital: 12.17 Java- bibliotecas e Frameworks   
 
1. Subtópico:
1. Conceitos básicos de bibliotecas e frameworks em Java
Assertivas:
1. Bibliotecas e frameworks em Java são conjuntos de ferramentas e funcionalidades prontas para uso em desenvolvimento de software.
2. As bibliotecas em Java consistem em coleções de classes e métodos úteis para diferentes propósitos.
3. Os frameworks em Java são estruturas que fornecem um conjunto de ferramentas e padrões para facilitar o desenvolvimento de aplicações.
4. As bibliotecas e frameworks em Java permitem reutilizar código, economizando tempo e esforço durante o desenvolvimento de software.
5. Uma biblioteca muito utilizada em Java é a "java.util", que fornece classes e interfaces para manipulação de coleções, datas, entre outros.
6. Um exemplo de framework em Java é o "Spring Framework", que oferece recursos para desenvolvimento de aplicações empresariais e gerenciamento de dependências.
7. Ao utilizar bibliotecas e frameworks em Java, é possível diminuir os riscos de erros e aumentar a produtividade dos desenvolvedores.
8. Muitas bibliotecas e frameworks em Java são de código aberto e disponíveis gratuitamente para uso e modificação.
9. Os frameworks em Java seguem princípios de design e arquitetura, promovendo a modularidade e reutilização de código.
10. O conhecimento sobre bibliotecas e frameworks em Java é fundamental para desenvolvedores que desejam aprimorar suas habilidades e aumentar sua eficiência no desenvolvimento de software.

2. Subtópico:
2. Uso e aplicação do Spring Framework
Assertivas:
1. O Spring Framework é uma plataforma de desenvolvimento de aplicativos em Java.
2. O Spring Framework possui recursos para o desenvolvimento de aplicações web, RESTful, batch, segurança, entre outros.
3. O uso do Spring Framework permite a criação de aplicações modulares e de fácil manutenção.
4. O Spring Framework utiliza a inversão de controle (IoC) como princípio de design, facilitando o teste e a extensibilidade de código.
5. O Spring Framework possui uma vasta quantidade de bibliotecas que auxiliam no desenvolvimento de diferentes camadas de uma aplicação.
6. O Spring Framework oferece suporte para a integração com diferentes bancos de dados, como MySQL, Oracle e PostgreSQL.
7. O Spring Framework permite a configuração de transações declarativas, facilitando o controle de operações com suporte a rollback em caso de falhas.
8. O Spring Framework possui uma integração nativa com frameworks de testes, como JUnit e Mockito.
9. O uso do Spring Framework facilita a implementação de autenticação e autorização em aplicações web.
10. O Spring Framework possui uma comunidade ativa e grande quantidade de documentação disponível para auxiliar no seu uso e aplicação.

3. Subtópico:
3. Hibernate: conceito, configuração e uso prático
Assertivas:
1. O Hibernate é um framework de mapeamento objeto-relacional utilizado para facilitar o acesso e manipulação de dados em bancos de dados relacionais.
2. Hibernate é amplamente utilizado em desenvolvimento de aplicações Java para realizar operações de persistência de dados de forma eficiente.
3. O Hibernate utiliza anotações ou um arquivo de mapeamento XML para estabelecer a relação entre as entidades do domínio e as tabelas do banco de dados.
4. Para configurar o Hibernate, é necessário fornecer informações sobre a conexão com o banco de dados, como URL, usuário e senha.
5. Uma das principais vantagens do Hibernate é que ele abstrai detalhes específicos do banco de dados, permitindo que o desenvolvedor escreva código independente de plataforma.
6. O Hibernate suporta vários algoritmos de otimização, como lazy loading e cache de segundo nível, visando melhorar o desempenho das consultas.
7. Com o Hibernate, é possível realizar operações de CRUD (Create, Read, Update, Delete) de forma simplificada e orientada a objetos.
8. O Hibernate oferece suporte a transações, garantindo a integridade dos dados através do uso de isolamento e atomicidade.
9. O Hibernate possui uma linguagem de consulta chamada HQL (Hibernate Query Language), que é semelhante ao SQL, mas trabalha diretamente com as entidades do domínio.
10. Além do HQL, o Hibernate também suporta consultas nativas em SQL para casos em que é necessário utilizar recursos específicos do banco de dados.

4. Subtópico:
4. Entendimento do JUnit para testes unitários em Java
Assertivas:
1. O JUnit é uma estrutura de teste de unidade amplamente utilizada para testar aplicativos Java.
2. O JUnit permite que os desenvolvedores criem facilmente testes automatizados para suas classes e métodos.
3. O JUnit fornece um conjunto abrangente de anotações para especificar a configuração e as expectativas dos testes.
4. Com o JUnit, é possível verificar se o resultado de um método é o esperado usando asserções.
5. O JUnit suporta o agrupamento de testes em classes de teste para melhor organização e execução.
6. O JUnit oferece opções de execução de testes, como execução em lote e execução paralela para melhor desempenho.
7. É possível usar o JUnit para testar quaisquer tipos de métodos em uma aplicação Java, seja público, privado ou protegido.
8. O JUnit fornece uma maneira fácil de lidar com exceções esperadas nos testes e verificar se elas foram lançadas corretamente.
9. O JUnit permite a criação de testes parametrizados, onde um conjunto de dados é fornecido para executar testes repetitivos com variações nos dados de entrada.
10. O JUnit integra-se perfeitamente com ferramentas de construção e ambientes de desenvolvimento populares, como Maven e Eclipse.

5. Subtópico:
5. Aplicação prática da biblioteca Apache Commons 
Assertivas:
1. A biblioteca Apache Commons é uma coleção de componentes de software de código aberto que fornece funcionalidades adicionais para aplicativos Java.
2. A biblioteca Apache Commons oferece uma ampla gama de classes e métodos que podem ser usados para tarefas comuns de programação, como manipulação de arquivos, geração de códigos hash e formatação de datas.
3. Um exemplo de aplicação prática da biblioteca Apache Commons é o uso da classe StringUtils, que fornece métodos para manipulação de strings de forma eficiente e fácil.
4. Ao utilizar a biblioteca Apache Commons, os desenvolvedores podem economizar tempo e esforço, pois não precisam desenvolver funcionalidades básicas do zero, mas sim utilizar as implementações já disponíveis.
5. A biblioteca Apache Commons é amplamente apreciada pela comunidade de desenvolvedores Java por sua qualidade e confiabilidade, sendo frequentemente recomendada como uma opção confiável para tarefas rotineiras de programação.

6. Subtópico:
6. Utilização do framework JSF (JavaServer Faces)
Assertivas:
1. O JSF é um framework Java utilizado no desenvolvimento de aplicações web.
2. O JSF é baseado no padrão MVC (Model-View-Controller).
3. O JSF utiliza componentes visuais para a criação de interfaces gráficas de usuário.
4. O JSF permite a manipulação de eventos do lado do cliente e do servidor.
5. O JSF possui integração nativa com tecnologias web como HTML, CSS e JavaScript.
6. O JSF oferece suporte à internacionalização e localização de aplicações.
7. O JSF é altamente configurável, permitindo a personalização de diversos aspectos da aplicação.
8. O JSF possui uma vasta comunidade de desenvolvedores e uma documentação abrangente.
9. O JSF é suportado por diversas IDEs e servidores de aplicação Java populares.
10. O JSF é uma escolha popular para o desenvolvimento de aplicações empresariais devido à sua robustez e escalabilidade.

7. Subtópico:
7. Aspectos fundamentais do Struts Framework 
Assertivas:
1. O Struts Framework é um framework de código aberto utilizado no desenvolvimento de aplicações web em Java.
2. O Struts Framework utiliza o padrão de projeto MVC (Model-View-Controller) para separar as responsabilidades de uma aplicação web.
3. O Struts Framework é compatível com a especificação JavaServer Pages (JSP) e Servlets, permitindo uma integração fácil com tecnologias web.
4. O Struts Framework possui uma arquitetura baseada em componentes, como Action, Form Bean, Action Form e Action Mapping, que auxiliam na estruturação lógica da aplicação.
5. O Struts Framework possui uma camada de controle centralizada no framework, conhecida como ActionServlet, que gerencia a execução do fluxo de controle da aplicação.
6. O Struts Framework oferece suporte nativo para a validação de formulários através da integração com o framework Apache Commons Validator.
7. O Struts Framework possui suporte para internacionalização, permitindo a criação de aplicações multi-idioma de forma simplificada.
8. O Struts Framework permite a configuração das rotas das requisições através de arquivos de configuração XML, conhecidos como arquivos de configuração Struts.
9. O Struts Framework possui uma biblioteca de tags JSP (JSP Tag Library) que facilita a criação de interfaces web dinâmicas.
10. O Struts Framework é amplamente utilizado em grandes organizações devido à sua robustez, escalabilidade e maturidade.

8. Subtópico:
8. Implementação de projetos com o Maven - gerenciamento de dependências 
Assertivas:
1. O Maven é uma ferramenta de automação de compilação de projetos em Java.
2. O Maven é amplamente utilizado para gerenciar dependências de projetos Java.
3. O Maven facilita o download automático de bibliotecas e frameworks necessários para o projeto.
4. O pom.xml é o arquivo de configuração principal do Maven, onde são definidas as dependências do projeto.
5. O Maven utiliza um sistema de gerenciamento baseado em repositórios, onde as bibliotecas são armazenadas e acessadas.
6. O Maven permite a definição e configuração de perfis, que permitem a seleção de diferentes conjuntos de dependências.
7. O Maven possibilita a integração com outras ferramentas, como o Jenkins ou o Eclipse, para automação de build e teste contínuo.
8. O Maven permite a criação de build scripts personalizados, utilizando plugins e goals.
9. O Maven promove a padronização e ordenação de projetos, facilitando o trabalho em equipe e a reutilização de código.
10. O Maven é uma ferramenta altamente flexível e configurável, permitindo a customização de diversas opções de compilação e deploy.

9. Subtópico:
9. Uso eficiente da biblioteca Guava para melhorar a produtividade
Assertivas:
1. A biblioteca Guava é uma ferramenta amplamente utilizada na programação em Java para melhorar a produtividade.
2. A Guava fornece uma ampla gama de classes e métodos para facilitar o desenvolvimento de software mais eficiente.
3. Ao usar a Guava, os desenvolvedores podem reduzir o tempo gasto na implementação de funcionalidades comuns.
4. A biblioteca Guava oferece recursos para lidar com coleções, strings, concorrência, pré-condições e muito mais.
5. A utilização adequada da Guava pode ajudar a minimizar a quantidade de código redundante ou repetitivo.
6. A Guava oferece classes e métodos que permitem escrever código mais legível e conciso.
7. Ao utilizar a Guava, os desenvolvedores podem facilmente trabalhar com estruturas de dados complexas de forma mais eficiente.
8. A biblioteca Guava oferece mecanismos para trabalhar com valores opcionais, evitando o uso de valores nulos.
9. Usar a Guava pode ajudar a melhorar a qualidade do código, reduzindo potenciais erros e melhorando a manutenibilidade.
10. A biblioteca Guava é amplamente adotada pela comunidade de desenvolvedores Java devido à sua eficiência e facilidade de uso.

10. Subtópico:
10. Conhecimento sobre o framework Grails para desenvolvimento web rápido
Assertivas:
1. O Grails é um framework de desenvolvimento web baseado em Java e Groovy.
2. O Grails permite o desenvolvimento rápido de aplicações web por meio de convenções e recursos simplificados.
3. O Grails é um framework de código aberto e possui uma comunidade ativa de desenvolvedores.
4. O Grails utiliza o padrão MVC (Model-View-Controller) para separar a lógica de negócio, a interface do usuário e o acesso a dados.
5. O Grails possui integração com o Hibernate, facilitando o mapeamento objeto-relacional.
6. O Grails utiliza o Apache Groovy como linguagem de programação principal, que é compatível e interoperável com Java.
7. O Grails facilita a criação de CRUDs (Create, Read, Update, Delete) para persistência de dados.
8. O Grails possui uma estrutura de diretórios bem definida, facilitando a organização e manutenção do código-fonte.
9. O Grails possui suporte para testes automatizados, seguindo práticas de desenvolvimento ágil.
10. O Grails tem uma curva de aprendizado relativamente menor em comparação com outros frameworks, devido à sua simplicidade e facilidade de uso.


