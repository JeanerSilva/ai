Pergunta Original: 11.2 Git principais comandos   
 
1. Subtópico:
1. Conceitos básicos e terminologia do Git
Assertivas:
1. O Git é um sistema de controle de versão distribuído amplamente utilizado no desenvolvimento de software.
2. O repositório é o local onde as alterações feitas no Git são armazenadas.
3. Um commit é uma ação no Git que registra as mudanças feitas em um determinado arquivo ou conjunto de arquivos.
4. O comando "git clone" é usado para criar uma cópia local de um repositório remoto.
5. O Git utiliza o conceito de branches, que permite trabalhar em diferentes versões dos arquivos de forma simultânea.
6. O comando "git pull" é utilizado para atualizar o repositório local com as alterações feitas no repositório remoto.
7. O comando "git add" é usado para adicionar alterações feitas em arquivos ao índice do Git, preparando-os para serem commitados.
8. O comando "git push" é usado para enviar as alterações realizadas no repositório local para o repositório remoto.
9. O comando "git merge" é utilizado para combinar os commits de diferentes branches em uma única branch.
10. O Git utiliza hashes (códigos alfanuméricos) para identificar de forma única cada commit no histórico do repositório.

2. Subtópico:
2. Comando 'git init': Criação de um novo repositório Git
Assertivas:
1. O comando 'git init' é utilizado para iniciar um novo repositório Git.
2. Ao executar o 'git init', um diretório .git é criado na raiz do projeto.
3. A execução do 'git init' configura o diretório escolhido como um repositório Git vazio.
4. O comando 'git init' não afeta diretórios já existentes no projeto.
5. O 'git init' é utilizado para iniciar o controle de versão em um projeto.
6. Ao utilizar o 'git init', o Git cria uma estrutura inicial necessária para o controle de versão.
7. O 'git init' pode ser utilizado tanto em projetos existentes quanto em projetos novos.
8. Ao usar o 'git init', o Git inicializa um novo branch chamado 'master'.
9. O 'git init' é o primeiro passo para utilizar os recursos de controle de versão do Git.
10. O comando 'git init' cria um local onde o histórico de alterações de arquivos será armazenado.

3. Subtópico:
3. Comando 'git clone': Clonagem de um repositório existente
Assertivas:
1. O comando 'git clone' é utilizado para realizar a clonagem de um repositório existente.
2. A clonagem de um repositório com o comando 'git clone' permite criar uma cópia idêntica do repositório em um diretório local.
3. Ao utilizar o comando 'git clone', é possível clonar repositórios remotos hospedados em servidores como o GitHub ou o GitLab.
4. A clonagem de um repositório com o comando 'git clone' baixa todos os arquivos e histórico de commits do repositório original.
5. O comando 'git clone' permite ao usuário contribuir para o desenvolvimento do projeto ao criar uma cópia local do repositório.
6. A clonagem de um repositório utilizando o comando 'git clone' preserva todo o histórico de alterações e ramificações do original.
7. A aplicação do comando 'git clone' cria uma conexão entre a cópia local e o repositório remoto, permitindo a atualização com novas mudanças.
8. Ao utilizar o comando 'git clone', é possível especificar o diretório onde a clonagem será feita, facilitando a organização dos projetos.
9. A clonagem de um repositório com o comando 'git clone' geralmente é feita através do endereço URL do repositório remoto.
10. O Git oferece suporte para o comando 'git clone' em todas as principais plataformas, incluindo Windows, macOS e Linux.

4. Subtópico:
4. Comando 'git add': Adição de arquivos ao índice do Git
Assertivas:
1. O comando 'git add' é utilizado para adicionar arquivos ao índice do Git.
2. O comando 'git add' permite que um arquivo seja rastreado pelo Git.
3. O comando 'git add' pode ser utilizado para adicionar alterações feitas em um arquivo ao índice do Git.
4. O comando 'git add' permite que múltiplos arquivos sejam adicionados ao índice de uma só vez.
5. O comando 'git add' pode ser utilizado para adicionar diretórios inteiros ao índice do Git.
6. O comando 'git add' deve ser utilizado antes do commit para garantir que as alterações sejam incluídas no repositório.
7. O comando 'git add' é uma etapa importante no fluxo de trabalho do Git.
8. O comando 'git add' pode ser revertido com o uso do comando 'git reset'.
9. O comando 'git add' também pode ser utilizado para adicionar alterações feitas em um arquivo específico ao índice.
10. O comando 'git add' faz parte do conjunto básico de comandos do Git e é amplamente utilizado no desenvolvimento de projetos.

5. Subtópico:
5. Comando 'git commit': Registro das alterações no repositório 
Assertivas:
1. O comando 'git commit' é utilizado para registrar as alterações feitas no repositório Git.
2. Ao executar o comando 'git commit', as alterações são salvas permanentemente no histórico do projeto.
3. O comando 'git commit' permite adicionar uma mensagem descritiva sobre as alterações realizadas.
4. Após o comando 'git commit', é possível visualizar as alterações feitas no repositório por meio do comando 'git log'.
5. O comando 'git commit' é essencial para manter um controle de versões eficiente em um projeto Git.
6. Ao utilizar o comando 'git commit', é possível desfazer alterações anteriores através de um revert ou reset.
7. O comando 'git commit' é uma etapa fundamental no fluxo de trabalho do Git.
8. Após realizar um commit no Git, as alterações podem ser compartilhadas e colaboradas com outros desenvolvedores.
9. O comando 'git commit' torna o repositório seguro ao registrar as modificações realizadas.
10. Com o comando 'git commit', é possível rastrear todas as mudanças feitas ao longo do tempo em um projeto Git.

6. Subtópico:
6. Comando 'git status': Verificação do estado dos arquivos 
Assertivas:
1. O comando 'git status' permite verificar o estado dos arquivos em um repositório git.
2. O 'git status' exibe informações sobre arquivos modificados, adicionados, removidos ou não rastreados.
3. O 'git status' mostra o branch atual, o commit mais recente e diferenças entre o repositório local e remoto.
4. Quando executado, o 'git status' mostra se existem arquivos prontos para serem adicionados ao próximo commit.
5. O comando 'git status' exibe mensagens claras e informativas sobre o estado do repositório git.
6. O 'git status' permite ao usuário identificar facilmente as alterações que foram realizadas desde o último commit.
7. O 'git status' é uma ferramenta fundamental para entender rapidamente o estado de um projeto git.
8. Ao utilizar o 'git status', é possível tomar decisões mais assertivas antes de realizar commits ou pushs em um repositório.
9. O 'git status' pode ser usado para verificar se existem conflitos que precisam ser resolvidos antes de realizar um merge.
10. Através do 'git status', é possível obter uma visão geral do progresso e desenvolvimento de um projeto git.

7. Subtópico:
7. Comando 'git push': Envio das alterações para o repositório remoto 
Assertivas:
1. O comando 'git push' é utilizado para enviar as alterações de um repositório local para um repositório remoto.
2. O 'git push' pode ser utilizado para enviar as alterações para diferentes repositórios remotos.
3. Ao utilizar o 'git push', é necessário ter permissão para realizar o envio das alterações no repositório remoto.
4. O 'git push' envia o código do ramo atual para o repositório remoto configurado.
5. O comando 'git push' pode ser seguido pelo nome do repositório remoto e ramo a ser enviado.
6. Ao realizar um 'git push', é possível verificar o progresso do envio das alterações.
7. O uso do comando 'git push' está intimamente relacionado ao processo de versionamento e colaboração em projetos de desenvolvimento de software.

8. Subtópico:
8. Comando 'git pull': Atualização do repositório local a partir do remoto 
Assertivas:
1. O comando 'git pull' é utilizado para atualização do repositório local.

2. O 'git pull' realiza a atualização do repositório local a partir do repositório remoto.

3. O 'git pull' combina as alterações feitas no repositório remoto com o repositório local.

4. Ao utilizar o comando 'git pull', é possível obter as últimas atualizações do projeto.

5. O 'git pull' é amplamente utilizado quando se trabalha em equipe e é necessário manter os repositórios sincronizados.

6. Caso haja conflitos durante o processo de atualização com o 'git pull', eles devem ser resolvidos antes de poder prosseguir com o trabalho.

7. O 'git pull' pode ser usado tanto em projetos pequenos quanto em projetos de grande escala.

8. O comando 'git pull' é muito útil quando se deseja atualizar o código com as modificações feitas por outros colaboradores.

9. O 'git pull' é uma das ferramentas essenciais do Git, um sistema de controle de versão amplamente utilizado.

10. O 'git pull' pode ser executado tanto por meio da interface de linha de comando quanto por meio de plataformas de desenvolvimento integrado como o Visual Studio Code.

9. Subtópico:
9. Uso
Assertivas:
1. O uso de drogas ilícitas é proibido por lei em todos os países.
2. O uso de cintos de segurança é obrigatório em veículos automotores.
3. O uso de capacetes é fundamental para a segurança dos motociclistas.
4. O uso de protetor solar é recomendado para prevenir doenças de pele causadas pela exposição excessiva ao sol.
5. O uso excessivo de eletrônicos pode prejudicar a saúde ocular.
6. O uso de fones de ouvido em volumes elevados pode causar danos permanentes à audição.
7. O uso de pesticidas em excesso pode contaminar o solo e os recursos hídricos.
8. O uso adequado de antibióticos é essencial para combater infecções bacterianas.
9. O uso indiscriminado de agrotóxicos pode afetar negativamente a qualidade dos alimentos que consumimos.
10. O uso de energia elétrica de forma consciente contribui para a preservação do meio ambiente.


