Item do edital: 12.5 Java- palavras reservadas   
 
1. Subtópico:
1. Definição e uso de palavras reservadas em Java
Assertivas:
1. As palavras reservadas em Java são pré-determinadas e não podem ser utilizadas como nomes de identificadores.
2. Palavras reservadas em Java são utilizadas para fins específicos e possuem um significado fixo na linguagem.
3. O uso de palavras reservadas é necessário para garantir a correta interpretação do código Java pelo compilador.
4. Palavras reservadas em Java não podem ser redefinidas pelo programador.
5. O conhecimento das palavras reservadas é essencial para escrever um código Java correto e sem erros de compilação.
6. A lista de palavras reservadas em Java inclui "if", "while", "for", "return" e "switch", entre outras.
7. O uso indevido de palavras reservadas em Java pode resultar em erros de sintaxe ou comportamentos indesejados do programa.
8. As palavras reservadas em Java são escritas em letras minúsculas.
9. A lista de palavras reservadas em Java é definida pelo próprio Java Development Kit (JDK).
10. A utilização adequada das palavras reservadas em Java contribui para a legibilidade e manutenibilidade do código fonte.

2. Subtópico:
2. Diferença entre palavras reservadas e identificadores em Java
Assertivas:
1. Identificadores em Java são utilizados para nomear classes, variáveis, métodos, pacotes, entre outros elementos do código fonte.
2. Palavras reservadas em Java são termos exclusivos da linguagem que possuem um significado específico e não podem ser utilizados como identificadores.
3. Identificadores em Java podem ser compostos por letras, dígitos e o símbolo underscore (_) e devem começar com uma letra.
4. Palavras reservadas em Java, por outro lado, são escritas em letras minúsculas e não podem ser modificadas de forma alguma.
5. Exemplos de identificadores válidos em Java são: nome, valorTotal, calcularSalario.
6. Exemplos de palavras reservadas em Java são: public, static, void, class.
7. Identificadores em Java podem ser diferentes por meio da utilização de letras maiúsculas e minúsculas, pois a linguagem é case-sensitive.
8. Palavras reservadas em Java são escritas em letras minúsculas e todas as suas letras são sempre em minúsculas.
9. É uma boa prática evitar utilizar palavras reservadas como identificadores em Java para não causar erros de compilação ou confusão no código.
10. Os identificadores em Java devem ser escolhidos de forma significativa, de acordo com o propósito do elemento ao qual se referem, facilitando assim a leitura e manutenção do código.

3. Subtópico:
3. Lista completa de palavras reservadas em Java
Assertivas:
1. A linguagem de programação Java possui um conjunto de palavras reservadas que são pré-definidas e não podem ser utilizadas como nomes de variáveis, métodos, classes, entre outros.
2. As palavras reservadas em Java são case-sensitive, ou seja, diferenciam maiúsculas de minúsculas.
3. Algumas palavras reservadas em Java são: abstract, boolean, byte, char, class, double, enum, extends, final, float, if, int, long, new, null, package, private, protected, public, return, short, static, super, switch, this, throw, throws, true, try, void e while.
4. É importante conhecer e respeitar as palavras reservadas em Java para evitar erros de compilação e garantir a correta execução do programa.
5. O uso de palavras reservadas em Java como identificadores de variáveis ou outros elementos do programa resultará em erro de compilação.
6. O conjunto de palavras reservadas em Java não sofre variações entre as diferentes versões da linguagem.
7. As palavras reservadas em Java são definidas pela especificação da linguagem e não podem ser alteradas ou personalizadas pelo desenvolvedor.
8. As palavras reservadas em Java são essenciais para a estrutura e sintaxe básica da linguagem, fornecendo uma base sólida para a criação de programas.
9. É possível encontrar a lista completa de palavras reservadas em Java na documentação oficial da Oracle.
10. Estudar e compreender as palavras reservadas em Java é fundamental para a programação nessa linguagem, pois elas determinam as construções e estruturas utilizadas na escrita do código.

4. Subtópico:
4. Palavras reservadas para tipos primitivos em Java
Assertivas:
1. A palavra reservada "int" em Java é utilizada para declarar uma variável do tipo inteiro.
2. O termo "boolean" é uma palavra reservada em Java utilizada para representar valores lógicos (verdadeiro ou falso).
3. A palavra reservada "double" em Java é utilizada para declarar uma variável do tipo ponto flutuante de dupla precisão.
4. Em Java, a palavra reservada "char" é utilizada para representar um caractere Unicode.
5. A palavra reservada "byte" em Java é utilizada para representar valores inteiros de 8 bits.
6. O termo "long" é uma palavra reservada em Java utilizada para representar valores inteiros maiores que o tipo "int".
7. A palavra reservada "short" em Java é utilizada para representar valores inteiros de 16 bits.
8. Em Java, "float" é uma palavra reservada utilizada para declarar uma variável do tipo de ponto flutuante de precisão simples.
9. A palavra reservada "void" em Java é utilizada para definir um método que não retorna nenhum valor.
10. O tipo de dado primitivo "String" é uma exceção às palavras reservadas em Java, representando uma sequência de caracteres.

5. Subtópico:
5. Uso de palavras reservadas para controle de fluxo (if, else, switch)
Assertivas:
1. A palavra "if" é uma palavra reservada utilizada na programação para a criação de estruturas condicionais.
2. A palavra "else" é uma palavra reservada utilizada na programação para definir o bloco de código a ser executado caso a condição do "if" não seja atendida.
3. A palavra "switch" é uma palavra reservada utilizada na programação para criar estruturas de controle de fluxo baseadas em múltiplas opções.
4. As palavras "if", "else" e "switch" são palavras reservadas da maioria das linguagens de programação, independentemente de sua sintaxe.
5. Ao utilizar palavras reservadas como "if", "else" e "switch", é importante seguir a sintaxe correta da linguagem de programação em questão.
6. Palavras reservadas, como "if", "else" e "switch", são essenciais para o bom funcionamento do controle de fluxo em um programa de computador.
7. O uso adequado das palavras reservadas de controle de fluxo, como "if", "else" e "switch", garante a correta execução de instruções condicionais em um programa.
8. As palavras reservadas "if", "else" e "switch" são amplamente utilizadas em algoritmos e programas para controlar o fluxo de execução de código.
9. É possível aninhar várias instruções "if" dentro de outras, criando uma estrutura mais complexa de controle de fluxo.
10. O conhecimento e a compreensão do uso adequado das palavras reservadas de controle de fluxo, como "if", "else" e "switch", são fundamentais para o desenvolvimento de programas eficientes e funcionais.

6. Subtópico:
6. Palavras reservadas para manipulação de exceções (try, catch, finally)
Assertivas:
1. A palavra reservada "try" é utilizada para delimitar um bloco de código que pode lançar exceções.
2. A palavra reservada "catch" é utilizada para capturar e tratar exceções lançadas por um bloco de código.
3. A palavra reservada "finally" é utilizada para definir um bloco de código que sempre será executado, independentemente de exceções ocorrerem ou não.
4. O bloco "try" deve ser seguido por pelo menos um bloco "catch" ou "finally".
5. Um bloco "catch" pode lidar com múltiplas exceções separadas por vírgula.
6. A palavra reservada "try" pode ser seguida por um bloco "catch" sem bloco "finally".
7. O bloco "finally" não pode ser utilizado isoladamente, ou seja, sempre deve acompanhar um bloco "try" ou "catch".
8. A palavra reservada "throw" é frequentemente utilizada junto com "try-catch" para lançar exceções explicitamente.
9. O bloco "catch" é executado somente se uma exceção for lançada no bloco "try".
10. A palavra reservada "finally" é utilizada para executar ações de limpeza, como fechar conexões com banco de dados, independentemente de ocorrerem ou não exceções.

7. Subtópico:
7. Uso das palavras 'public', 'private' e 'protected'
Assertivas:
1. A palavra "public" é comumente utilizada para se referir a algo que é de interesse e acesso público, como espaços, serviços e informações disponíveis para todos.
2. A palavra "private" é utilizada para se referir a algo que é de natureza pessoal, íntima ou exclusiva, não acessível ao público em geral.
3. No contexto da programação, "public" é um modificador de acesso que indica que um método ou atributo é acessível por qualquer código no programa.
4. "Private" é um modificador de acesso que indica que um método ou atributo é acessível apenas dentro da mesma classe em que foi declarado.
5. "Protected" é um modificador de acesso que indica que um método ou atributo é acessível pela mesma classe em que foi declarado, por suas subclasses e por classes do mesmo pacote.
6. Na área de segurança da informação, "public key" é um conceito utilizado na criptografia assimétrica, onde uma chave é pública e utilizada para criptografar dados, enquanto a chave privada é mantida em sigilo e utilizada para descriptografar esses dados.
7. O termo "public domain" é utilizado para se referir a obras intelectuais que estão fora do controle de direitos autorais, podendo ser utilizadas livremente pelo público em geral.
8. O conceito de "private cloud" se refere a uma infraestrutura de tecnologia da informação que é utilizada exclusivamente por uma única organização, oferecendo maior controle e personalização em relação a uma nuvem pública.
9. A expressão "protected areas" é utilizada para se referir a áreas naturais preservadas e protegidas por lei, com o objetivo de conservar a biodiversidade e os ecossistemas.
10. Em termos legais, a violação de informações privadas é considerada um crime, podendo ser punida de acordo com a legislação vigente.

8. Subtópico:
8. Função das palavras 'static', 'final' e 'void' no código Java
Assertivas:
1. A palavra-chave 'static' em Java permite a criação de métodos e variáveis ​​que são acessíveis diretamente pela classe, sem a necessidade de criar uma instância da classe.
2. Ao usar a palavra-chave 'final' em Java, um método ou variável se torna constante e não pode ser alterado ou sobrescrito por subclasses.
3. A palavra 'static' não pode ser usada para declarar uma classe em Java.
4. A palavra-chave 'final' pode ser usada para declarar uma classe que não pode ser estendida por outras classes.
5. A palavra-chave 'void' em Java indica que um método não retorna nenhum valor.
6. A palavra 'static' pode ser usada para declarar variáveis de classe que são compartilhadas por todas as instâncias da classe.
7. A palavra-chave 'final' pode ser usada para declarar uma variável que não pode ser alterada após a sua inicialização.
8. Um método declarado como 'void' não pode ter um retorno de valor.
9. A palavra 'static' pode ser usada para declarar métodos auxiliares que não exigem uma instância da classe para serem chamados.
10. A palavra-chave 'final' é frequentemente usada para declarar constantes em Java.

9. Subtópico:
9. Papel da palavra-chave 'new' na criação
Assertivas:
do objeto em JavaScript.

1. A palavra-chave 'new' é utilizada para criar uma nova instância de um objeto em JavaScript.
2. O operador 'new' permite criar objetos a partir de uma função construtora.
3. Ao utilizar a palavra-chave 'new', é criado um novo objeto vazio que herda as propriedades e métodos da função construtora.
4. A utilização da palavra-chave 'new' é essencial para instanciar objetos de classes em JavaScript.
5. Quando utilizada corretamente, a palavra-chave 'new' cria um objeto único e independente da função construtora utilizada.
6. Ao utilizar 'new', é possível definir valores iniciais para as propriedades do objeto criado.
7. O uso do operador 'new' é uma prática comum na programação orientada a objetos em JavaScript.
8. O operador 'new' é responsável por alocar memória para o novo objeto criado.
9. A palavra-chave 'new' é sempre seguida por uma invocação da função construtora, com ou sem parâmetros, dependendo da implementação desejada.


