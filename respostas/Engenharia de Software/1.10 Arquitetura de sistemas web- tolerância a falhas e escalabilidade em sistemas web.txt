Item do edital: 1.10 Arquitetura de sistemas web- tolerância a falhas e escalabilidade em sistemas web.    
 
1. Subtópico:
1. Conceitos fundamentais de Arquitetura de Sistemas Web.
Assertivas:
1. A arquitetura de sistemas web é composta por elementos como cliente, servidor e protocolos de comunicação.
2. A arquitetura cliente-servidor é um dos modelos mais utilizados na construção de sistemas web.
3. A arquitetura REST (Representational State Transfer) é amplamente utilizada e baseia-se em princípios como utilização de recursos, identificação única, comunicação stateless e operações padrão.
4. O modelo MVC (Model-View-Controller) é frequentemente utilizado em arquiteturas de sistemas web para separar a lógica de negócio, a apresentação e a interação com o usuário.
5. A arquitetura de microsserviços é uma abordagem que consiste em dividir um sistema complexo em serviços menores, independentes e com recursos específicos.
6. A arquitetura de sistemas web em camadas é uma abordagem que organiza a aplicação em diferentes níveis, geralmente incluindo a camada de apresentação, a camada de lógica de negócio e a camada de persistência.
7. A utilização de cache é uma técnica comum na arquitetura de sistemas web para melhorar desempenho e reduzir a carga sobre o servidor.
8. A arquitetura orientada a eventos é uma abordagem que envolve o uso de eventos assíncronos para comunicação entre os componentes do sistema.
9. A arquitetura de sistemas web escalável é capaz de lidar com o aumento de tráfego e carga de forma eficiente, sem comprometer o desempenho do sistema.
10. A comunicação em uma arquitetura de sistemas web pode ser realizada por meio de diferentes protocolos, como HTTP, TCP/IP e WebSocket.

2. Subtópico:
2. Princípios e técnicas para a tolerância a falhas em sistemas web.
Assertivas:
1. A tolerância a falhas em sistemas web visa garantir a disponibilidade contínua dos serviços mesmo em caso de falhas imprevistas.
2. O uso de balanceadores de carga é uma técnica amplamente utilizada para garantir a tolerância a falhas em sistemas web, distribuindo o tráfego entre servidores.
3. A redundância de sistemas é uma prática importante para garantir a tolerância a falhas em sistemas web, permitindo que outros servidores assumam o processamento em caso de falhas em um determinado servidor.
4. A utilização de backups regulares é uma técnica eficaz para garantir a tolerância a falhas em sistemas web, permitindo a rápida recuperação em caso de perda de dados.
5. A implementação de técnicas de balanceamento de carga geograficamente distribuídas contribui para a tolerância a falhas em sistemas web ao permitir que os usuários sejam redirecionados para servidores mais próximos fisicamente.
6. A monitoração constante do desempenho e disponibilidade dos servidores é uma prática fundamental para garantir a tolerância a falhas em sistemas web, permitindo a identificação e resolução rápida de problemas.
7. A utilização de algoritmos de roteamento dinâmico é uma técnica que contribui para a tolerância a falhas em sistemas web, permitindo que o tráfego seja redirecionado automaticamente em caso de falhas em um determinado caminho da rede.
8. A aplicação de testes de estresse e carga é uma prática comum para avaliar a tolerância a falhas em sistemas web, simulando situações de alto tráfego e verificando a capacidade de resposta do sistema.
9. A adoção de protocolos de comunicação confiáveis, como o TCP/IP, é uma técnica fundamental para garantir a tolerância a falhas em sistemas web, assegurando a entrega correta dos pacotes de dados.
10. O estabelecimento de acordos de nível de serviço (SLA) é uma prática importante para garantir a tolerância a falhas em sistemas web, estabelecendo metas de disponibilidade e desempenho que devem ser atendidas.

3. Subtópico:
3. Mecanismos de detecção e recuperação de falhas em sistemas web.
Assertivas:
1. Os mecanismos de detecção de falhas em sistemas web são fundamentais para garantir a estabilidade e a segurança desses sistemas.
2. A detecção de falhas em sistemas web pode ser realizada por meio da monitoração de logs e registros de atividades.
3. A utilização de ferramentas de testes automatizados, como scanners de vulnerabilidades, auxilia na detecção de falhas em sistemas web.
4. A implementação de mecanismos de recuperação de falhas em sistemas web pode minimizar o impacto de incidentes e reduzir o tempo de inatividade do sistema.
5. A utilização de backups periódicos dos dados do sistema é um mecanismo eficiente de recuperação de falhas em sistemas web.
6. A adoção de redundância em servidores e sistemas de failover ajuda na recuperação de falhas em sistemas web.
7. A realização de testes de recuperação de desastres, simulando situações de falhas, é uma prática recomendada para garantir a efetividade dos mecanismos de recuperação em sistemas web.
8. A implementação de processos de contingência, como o estabelecimento de planos de resposta a incidentes, contribui para a recuperação de falhas em sistemas web.
9. A utilização de sistemas de monitoramento em tempo real permite a detecção imediata de falhas em sistemas web e a tomada de medidas corretivas ágeis.
10. A manutenção regular dos sistemas web, com aplicação de patches de segurança e atualizações de software, contribui para a prevenção de falhas e a redução da necessidade de recuperação.

4. Subtópico:
4. Estratégias para garantir a disponibilidade e confiabilidade dos sistemas web.
Assertivas:
1. Garantir a disponibilidade e confiabilidade dos sistemas web envolve a implementação de soluções robustas de redundância de servidores.
2. A utilização de balanceadores de carga é uma estratégia eficiente para assegurar a disponibilidade dos sistemas web, distribuindo o tráfego entre servidores.
3. A adoção de sistemas de monitoramento em tempo real permite identificar e solucionar problemas de disponibilidade e confiabilidade dos sistemas web de forma ágil.
4. O uso de sistemas de cache auxilia na melhoria da disponibilidade dos sistemas web, reduzindo o tempo de resposta das requisições.
5. A implementação de mecanismos de replicação de bancos de dados é uma estratégia relevante para garantir a confiabilidade dos sistemas web.
6. A aplicação de testes de estresse e carga nos sistemas web ajuda a identificar possíveis pontos de falha que podem impactar a disponibilidade.
7. A utilização de protocolos de segurança, como SSL/TLS, contribui para a confiabilidade dos sistemas web, protegendo dados sensíveis durante a transmissão.
8. A manutenção preventiva dos servidores e equipamentos utilizados nos sistemas web é essencial para garantir sua disponibilidade e confiabilidade a longo prazo.
9. A configuração adequada de firewalls e sistemas de detecção de intrusão é uma estratégia crucial para proteger a disponibilidade e confiabilidade dos sistemas web contra ataques.
10. A realização de backups regularmente é uma prática recomendada para assegurar a disponibilidade e confiabilidade dos sistemas web diante de possíveis falhas ou incidentes.

5. Subtópico:
5. Conceito, importância e técnicas para escalabilidade em sistemas web.
Assertivas:
1. A escalabilidade em sistemas web refere-se à capacidade de um sistema lidar com um aumento significativo de tráfego e demanda sem comprometer seu desempenho.
2. A escalabilidade é um fator crucial para garantir a disponibilidade e a performance de sistemas web em crescimento, especialmente em aplicações de alto tráfego, como redes sociais e serviços online.
3. Uma técnica comum para escalabilidade em sistemas web é a distribuição de carga, que consiste em dividir o tráfego entre vários servidores, para que nenhum deles fique sobrecarregado.
4. O uso de caches é uma estratégia eficaz para melhorar a escalabilidade de sistemas web, reduzindo a carga em servidores ao armazenar resultados de consultas e operações frequentes.
5. Para atingir a escalabilidade, é importante adotar uma arquitetura orientada a serviços, na qual diferentes partes do sistema são desacopladas e podem ser dimensionadas de forma independente.
6. A utilização de tecnologias de computação em nuvem, como o Amazon Web Services (AWS) e o Google Cloud Platform (GCP), pode facilitar a escalabilidade em sistemas web, permitindo a adição ou remoção rápida de recursos conforme a demanda.
7. O escalonamento horizontal é uma técnica para escalabilidade em sistemas web, que envolve a adição de mais servidores para lidar com o aumento de tráfego, em vez de melhorar o desempenho de um único servidor.
8. A implementação de uma arquitetura de microsserviços é uma abordagem eficaz para escalabilidade em sistemas web, pois permite que cada serviço seja escalado independentemente, de acordo com a demanda específica.
9. A divisão de uma aplicação monolítica em componentes independentes, conhecida como arquitetura de microfrontend, pode melhorar a escalabilidade em sistemas web, facilitando a manutenção e o dimensionamento de diferentes partes da aplicação.
10. A utilização de ferramentas de monitoramento e análise de desempenho, como o uso de métricas e logs, é essencial para identificar gargalos e tomar medidas para otimizar a escalabilidade em sistemas web.

6. Subtópico:
6. Balanceamento de carga como estratégia para escalabilidade em sistemas web.
Assertivas:
1. O balanceamento de carga é uma estratégia utilizada para distribuir o tráfego de um sistema web de forma equilibrada entre os servidores disponíveis.
2. O balanceamento de carga contribui para aumentar a eficiência e a disponibilidade de um sistema web, garantindo que nenhum servidor fique sobrecarregado.
3. Esse método permite que múltiplos servidores atendam às solicitações dos usuários simultaneamente, melhorando a capacidade de resposta do sistema.
4. O balanceamento de carga pode ser aplicado em diferentes níveis de um sistema web, como no nível de aplicação, de rede ou de DNS.
5. O balanceamento de carga baseado em round-robin distribui as requisições de forma sequencial e igualitária entre os servidores disponíveis.
6. A utilização de algoritmos de balanceamento de carga, como o Least Connection, garante que as requisições sejam direcionadas para o servidor com menor carga.
7. O balanceamento de carga aprimora a escalabilidade de sistemas web, permitindo que novos servidores sejam adicionados facilmente ao ambiente.
8. Essa estratégia contribui para minimizar a possibilidade de falhas e sobrecargas nos servidores, resultando em uma melhor experiência para os usuários.
9. O balanceamento de carga oferece uma maior flexibilidade para lidar com picos de tráfego e demanda, adaptando-se de forma eficiente às variações na carga do sistema.
10. Existem diversas soluções de software e hardware disponíveis para implementar o balanceamento de carga em sistemas web, cada uma com suas vantagens e características específicas.

7. Subtópico:
7. Uso da virtualização e computação em nuvem na escalabilidade dos sistemas web.
Assertivas:
1. A virtualização é uma tecnologia amplamente utilizada para aumentar a escalabilidade dos sistemas web.
2. A virtualização permite a criação de múltiplas instâncias virtuais em um único servidor físico, proporcionando um ambiente flexível e de fácil escalabilidade.
3. A virtualização possibilita o compartilhamento eficiente de recursos, reduzindo custos e trazendo maior agilidade para os sistemas web.
4. A computação em nuvem é uma solução cada vez mais adotada para escalabilidade dos sistemas web.
5. A computação em nuvem permite o acesso remoto, escalabilidade dinâmica e compartilhamento de recursos de forma simples e eficiente.
6. A virtualização é uma tecnologia base para a computação em nuvem.
7. A computação em nuvem permite a utilização de recursos sob demanda, possibilitando uma resposta rápida às necessidades de escalabilidade dos sistemas web.
8. A virtualização e a computação em nuvem são soluções eficazes para lidar com picos de demanda em sistemas web.
9. A virtualização e a computação em nuvem permitem uma maior utilização dos recursos disponíveis, evitando desperdícios e reduzindo custos de infraestrutura.
10. A adoção da virtualização e da computação em nuvem tem se mostrado uma tendência crescente na escalabilidade dos sistemas web devido aos seus benefícios em termos de flexibilidade, agilidade e eficiência.

8. Subtópico:
8. Impacto da arquitetura do sistema na tolerância a falhas e
Assertivas:
8. Impacto da arquitetura do sistema na tolerância a falhas:

1. A arquitetura do sistema influencia diretamente a capacidade de tolerância a falhas.
2. Quanto mais resiliente for a arquitetura do sistema, maior será sua capacidade de se recuperar de falhas.
3. Uma arquitetura distribuída pode contribuir para a tolerância a falhas, ao permitir a redundância de recursos e a recuperação de falhas isoladas.
4. A modularidade da arquitetura pode facilitar a identificação e o tratamento de falhas específicas sem impactar negativamente o restante do sistema.
5. A utilização de sistemas de detecção de falhas em tempo real pode ser beneficiada por uma arquitetura adaptada a comunicação rápida e eficiente entre componentes.
6. A arquitetura baseada em microsserviços pode auxiliar na tolerância a falhas, permitindo que apenas os serviços afetados sejam temporariamente desligados sem interromper todo o sistema.
7. A arquitetura orientada a eventos pode facilitar o isolamento e a mitigação de falhas, ao permitir que eventos indesejados sejam detectados e tratados separadamente.
8. A arquitetura em camadas pode contribuir para uma maior tolerância a falhas, ao permitir a substituição de camadas com falhas sem a necessidade de afetar o restante do sistema.
9. A utilização de técnicas de monitoramento proativo da arquitetura pode ajudar a identificar falhas potenciais antes mesmo de ocorrerem.
10. A arquitetura resiliente pode possibilitar uma rápida recuperação de falhas, minimizando o impacto no funcionamento do sistema e na experiência do usuário.


