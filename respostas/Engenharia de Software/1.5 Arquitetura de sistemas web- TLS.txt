Item do edital: 1.5 Arquitetura de sistemas web- TLS   
 
1. Subtópico:
1. Conceito e importância do TLS (Transport Layer Security) na arquitetura de sistemas web.
Assertivas:
1. O TLS é um protocolo criptográfico utilizado para garantir a segurança das comunicações em sistemas web.
2. O TLS é essencial para proteger a integridade, confidencialidade e autenticidade dos dados transmitidos entre cliente e servidor.
3. O TLS utiliza criptografia assimétrica e simétrica para estabelecer uma conexão segura entre as partes envolvidas.
4. A utilização do TLS impede que informações sensíveis sejam interceptadas e decifradas por terceiros durante a transmissão.
5. O uso do TLS é importante para prevenir ataques de escuta, como o "Man-in-the-Middle", em que um invasor se posiciona entre cliente e servidor para obter informações sensíveis.
6. O TLS utiliza certificados digitais para garantir a autenticidade dos servidores, permitindo aos clientes verificar a identidade do servidor com o qual estão se comunicando.
7. A utilização do TLS é recomendada para qualquer sistema web que deseje garantir a segurança da transmissão de dados, independentemente do tipo de informação transmitida.
8. O TLS é amplamente utilizado em transações financeiras online, serviços de email seguro, VPNs e outros sistemas que envolvam a transmissão de dados confidenciais pela internet.
9. A adoção do TLS é uma prática importante para cumprir requisitos de conformidade, como o PCI-DSS, que estabelece padrões de segurança para empresas envolvidas em transações financeiras.
10. O TLS evoluiu a partir do SSL (Secure Sockets Layer), sendo que a versão mais utilizada atualmente é o TLS 1.3, que oferece melhorias em segurança e performance.

2. Subtópico:
2. Diferenças entre TLS e SSL (Secure Sockets Layer).
Assertivas:
1. O TLS (Transport Layer Security) e o SSL (Secure Sockets Layer) são protocolos criptográficos que fornecem segurança para comunicações via internet.
2. O TLS é uma versão mais atualizada e segura do SSL, substituindo gradualmente o seu uso.
3. O TLS utiliza algoritmos de criptografia mais fortes em comparação com o SSL.
4. O SSL foi desenvolvido pela Netscape e o TLS foi criado pela Internet Engineering Task Force (IETF).
5. Ambos os protocolos SSL e TLS são amplamente utilizados para estabelecer conexões seguras em serviços de e-commerce e em outros tipos de transferência de dados sensíveis.
6. O SSL e o TLS operam na camada de transporte do modelo TCP/IP, oferecendo segurança entre a camada de aplicação e a camada de rede.
7. TLS e SSL utilizam certificados digitais para autenticar e verificar a identidade dos servidores e, em alguns casos, dos clientes.
8. Tanto o TLS quanto o SSL podem ser configurados com diferentes níveis de segurança, dependendo das necessidades específicas de cada aplicação.
9. O SSL é amplamente conhecido pela sua vulnerabilidade a ataques como o "POODLE" (Padding Oracle On Downgraded Legacy Encryption).
10. O uso do TLS é recomendado em detrimento do SSL, devido às melhorias de segurança oferecidas pela sua versão mais recente e à obsolescência progressiva do SSL.

3. Subtópico:
3. Processo de handshake do TLS: estabelecimento da conexão segura.
Assertivas:
1. O processo de handshake no TLS é responsável pelo estabelecimento da conexão segura entre um cliente e um servidor.
2. Durante o processo de handshake, o cliente e o servidor trocam informações criptografadas para garantir a integridade e a autenticidade dos dados.
3. O handshake do TLS utiliza criptografia assimétrica para troca de chaves. 
4. Durante o handshake, o cliente envia uma mensagem chamada "ClientHello" para o servidor, informando as versões de TLS suportadas e os algoritmos criptográficos disponíveis.
5. O servidor responde ao "ClientHello" com uma mensagem "ServerHello", indicando qual versão de TLS será utilizada na comunicação, além de outras informações como o certificado digital do servidor.
6. Após essa troca de mensagens, o cliente valida o certificado digital do servidor. 
7. Durante o processo de handshake, o cliente e o servidor concordam sobre um algoritmo de cifra e um esquema de autenticação para serem utilizados durante a comunicação.
8. Após a seleção do algoritmo, o cliente e o servidor geram uma chave de sessão compartilhada, que será utilizada para criptografar e descriptografar os dados trocados.
9. Ao final do processo de handshake, o servidor envia uma mensagem "ServerHelloDone" para indicar que a negociação foi concluída e que a conexão está estabelecida.
10. Depois de concluído o handshake, cliente e servidor podem começar a trocar dados de forma segura e criptografada utilizando a chave de sessão compartilhada.

4. Subtópico:
4. Versões do protocolo TLS e suas diferenças principais.
Assertivas:
1. O protocolo TLS (Transport Layer Security) é um protocolo de segurança amplamente utilizado na internet para garantir a confidencialidade e integridade dos dados transmitidos.

2. A primeira versão do protocolo TLS foi lançada em 1999, como uma evolução do antigo protocolo SSL (Secure Sockets Layer).

3. A versão do protocolo TLS mais recente é a TLS 1.3, lançada em 2018, que introduziu melhorias significativas em relação às versões anteriores.

4. Entre as principais diferenças entre o TLS 1.3 e suas versões anteriores estão a redução do número de trocas de mensagens entre o cliente e o servidor, diminuindo a latência da conexão.

5. Outra diferença importante entre o TLS 1.3 e suas versões anteriores é a eliminação de algoritmos de criptografia considerados menos seguros, priorizando algoritmos mais fortes e atualizados.

6. O TLS 1.2, lançado em 2008, é uma versão amplamente utilizada e considerada segura, embora tenha algumas limitações em relação ao TLS 1.3.

7. Antes do TLS 1.2, existiam outras versões do protocolo, como o SSL 2.0, o SSL 3.0 e o TLS 1.0, que foram descontinuadas devido a problemas de segurança.

8. O TLS 1.0 e o TLS 1.1, lançados em 1999 e 2006, respectivamente, são considerados menos seguros em comparação com as versões mais recentes e, portanto, não são mais recomendados para uso.

9. Uma das diferenças entre o TLS 1.1 e suas versões anteriores é a adição de suporte a algoritmos de chave criptográfica de tamanho maior, aumentando a segurança da comunicação.

10. A escolha da versão do protocolo TLS a ser utilizada em uma conexão é determinada pela compatibilidade entre o servidor e o cliente, bem como pelos requisitos de segurança específicos da aplicação.

5. Subtópico:
5. Criptografia simétrica e assimétrica no contexto do TLS.
Assertivas:
1. No TLS, a criptografia simétrica é utilizada para garantir a confidencialidade dos dados durante uma comunicação segura.
2. A criptografia simétrica no TLS utiliza a mesma chave para cifrar e decifrar os dados transmitidos.
3. A criptografia assimétrica no TLS é utilizada para autenticar a identidade das partes envolvidas na comunicação segura.
4. A criptografia assimétrica no TLS utiliza um par de chaves, uma chave pública e uma chave privada.
5. A chave pública na criptografia assimétrica do TLS é disponibilizada para qualquer pessoa, enquanto a chave privada é mantida em sigilo.
6. No TLS, a criptografia simétrica é mais rápida do que a criptografia assimétrica.
7. A criptografia simétrica no TLS garante a confidencialidade dos dados, mas não garante a autenticidade das partes envolvidas na comunicação.
8. A criptografia assimétrica no TLS garante tanto a confidencialidade dos dados como a autenticidade das partes envolvidas na comunicação.
9. A escolha entre criptografia simétrica e assimétrica no TLS depende do tamanho e da natureza dos dados a serem cifrados.
10. A utilização de criptografia simétrica e assimétrica no TLS promove uma comunicação segura e confiável entre um cliente e um servidor.

6. Subtópico:
6. Certificados digitais em TLS: conceito, tipos e validação.
Assertivas:
1. O TLS (Transport Layer Security) é um protocolo criptográfico utilizado para garantir a segurança das comunicações na internet.
2. Os certificados digitais em TLS são utilizados para garantir a autenticação e a integridade das informações transmitidas entre um servidor e um cliente.
3. Existem vários tipos de certificados digitais em TLS, sendo os mais comuns os certificados de domínio, os certificados curinga e os certificados de organização.
4. Os certificados de domínio são utilizados para permitir a comunicação segura entre um servidor e um único domínio, como www.exemplo.com.
5. Os certificados curinga são utilizados para permitir a comunicação segura entre um servidor e todos os subdomínios de um domínio, como *.exemplo.com.
6. Os certificados de organização são utilizados para autenticar a identidade de uma empresa ou organização, garantindo que o website pertence ao respectivo detentor.
7. A validação de um certificado digital em TLS envolve a verificação das informações presentes no certificado, como o nome do domínio e a organização detentora.
8. A validação também pode incluir a verificação de documentação e contato com o detentor do certificado para garantir a autenticidade das informações.
9. Os certificados digitais em TLS são emitidos por autoridades de certificação (CA) confiáveis, que atuam como terceiros de confiança na verificação e emissão dos certificados.
10. A utilização de certificados digitais em TLS é fundamental para proteger a troca de informações sensíveis, como informações de login, dados bancários e informações pessoais.

7. Subtópico:
7. Vulnerabilidades comuns e ataques ao protocolo TLS.
Assertivas:
1. O protocolo TLS (Transport Layer Security) é vulnerável a ataques de falsificação de certificados, em que um invasor se passa por uma entidade confiável.
2. Vulnerabilidades de negociação de cifras podem permitir que um atacante force a utilização de algoritmos de criptografia mais fracos no processo de comunicação TLS.
3. O ataque BEAST (Browser Exploit Against SSL/TLS) explora uma vulnerabilidade no modo de operação CBC (Cipher Block Chaining) usado em algumas versões do TLS.
4. A vulnerabilidade CRIME (Compression Ratio Info-leak Made Easy) permite que um atacante obtenha informações sensíveis, como cookies de autenticação, por meio de ataques de injeção de dados.
5. O ataque DROWN (Decrypting RSA with Obsolete and Weakened eNcryption) explora uma falha na implementação de SSLv2 para comprometer conexões TLS modernas.
6. O ataque Heartbleed aproveita uma vulnerabilidade na extensão OpenSSL Heartbeat para extrair informações confidenciais da memória do servidor.
7. O ataque POODLE (Padding Oracle On Downgraded Legacy Encryption) explora a falha no SSLv3 para decifrar informações sensíveis transmitidas por meio do protocolo TLS.
8. O ataque FREAK (Factoring RSA Export Keys) explora uma vulnerabilidade na negociação de criptografia do TLS para forçar a utilização de algoritmos de criptografia enfraquecidos.
9. A vulnerabilidade SLOTH (Security Losses from Obsolete and Truncated Transcript Hashes) permite que um atacante modifique conteúdos da comunicação TLS sem ser detectado.
10. O ataque Logjam explora vulnerabilidades em algoritmos de Diffie-Hellman para interceptar comunicações TLS e descriptografar informações confidenciais.

8. Subtópico:
8. Mecanismos de autenticação no protocolo TLS.
Assertivas:
1. O protocolo TLS utiliza o mecanismo de autenticação através de certificados digitais.
2. O TLS permite estabelecer uma conexão segura entre um cliente e um servidor.
3. O TLS utiliza criptografia para garantir a integridade dos dados durante a transmissão.
4. No TLS, a autenticação é realizada por meio da troca de chaves criptográficas entre o cliente e o servidor.
5. O TLS utiliza certificados digitais para validar a identidade dos servidores.
6. O mecanismo de autenticação no TLS baseia-se no uso de algoritmos assimétricos para troca de chaves.
7. No TLS, a autenticação é realizada antes do início da transmissão dos dados.
8. O TLS utiliza o protocolo de criptografia estável e amplamente adotado chamado SSL.
9. O mecanismo de autenticação do TLS pode ser configurado para requerer autenticação mútua entre o cliente e o servidor.
10. O protocolo TLS possui mecanismos de autenticação eficientes e seguros, garantindo a inviolabilidade da comunicação entre as partes envolvidas.

9. Subtópico:
9. Implementação prática do protocolo TLS
Assertivas:
1. O protocolo TLS (Transport Layer Security) é uma versão atualizada do protocolo SSL (Secure Sockets Layer).
2. A implementação do protocolo TLS é amplamente utilizada para garantir a segurança das comunicações na Internet.
3. O protocolo TLS é utilizado em aplicações como servidores de email, servidores web, protocolos de mensagens instantâneas e transferência de arquivos.
4. A implementação prática do protocolo TLS envolve a troca de chaves de criptografia entre o cliente e o servidor para garantir a segurança dos dados durante a transmissão.
5. O protocolo TLS fornece autenticação do servidor e do cliente, garantindo que a comunicação ocorra apenas entre entidades confiáveis.
6. A implementação correta do protocolo TLS impede a interceptação de informações sensíveis, como senhas e dados financeiros.
7. A implementação do protocolo TLS é baseada em algoritmos de criptografia simétricos e assimétricos, que garantem a confidencialidade e a integridade dos dados.
8. A implementação prática do protocolo TLS permite a seleção de diferentes níveis de segurança, dependendo das necessidades e requisitos da aplicação.
9. A implementação adequada do protocolo TLS requer atualizações regulares para garantir a segurança contra vulnerabilidades conhecidas.
10. A implementação do protocolo TLS deve ser feita por profissionais especializados em segurança da informação, a fim de evitar falhas que possam comprometer a segurança das comunicações.


