Pergunta Original: 1.2 Arquitetura de sistemas web- HTTP-2   
 
1. Subtópico:
1. Conceitos básicos de Arquitetura de Sistemas Web
Assertivas:
1. A arquitetura de sistemas web refere-se à estrutura organizacional e funcional de um sistema de software baseado em web.
2. A arquitetura de sistemas web envolve a alocação e integração dos diferentes componentes do sistema, como servidores, bancos de dados e interfaces de usuário.
3. A arquitetura de sistemas web visa garantir a escalabilidade, a disponibilidade e o desempenho do sistema, além de garantir a segurança das informações transmitidas.
4. Uma das abordagens mais comuns para a arquitetura de sistemas web é o modelo cliente-servidor, em que o cliente faz solicitações ao servidor e o servidor processa essas solicitações e retorna as respostas.
5. A arquitetura de sistemas web também pode ser baseada no modelo de três camadas, em que há uma separação clara entre a camada de apresentação, a camada de lógica de negócios e a camada de acesso a dados.
6. A arquitetura de sistemas web pode ser projetada para ser distribuída, ou seja, espalhada por diferentes servidores ou datacenters para garantir a redundância e a tolerância a falhas.
7. A arquitetura de sistemas web pode incluir o uso de serviços web, que são componentes independentes que podem ser acessados via protocolos de internet padronizados.
8. A arquitetura de sistemas web pode ser influenciada por fatores como a natureza dos sistemas de informação envolvidos, os requisitos de negócios e as restrições tecnológicas.
9. A arquitetura de sistemas web deve ser projetada levando em consideração a modularização, para facilitar a manutenção e extensibilidade do sistema.
10. A arquitetura de sistemas web deve ser documentada de forma clara e precisa para auxiliar no entendimento e na evolução do sistema ao longo do tempo.

2. Subtópico:
2. Entendimento do protocolo HTTP-2
Assertivas:
1. O protocolo HTTP-2 é a versão mais recente do protocolo HTTP utilizado para a comunicação na web.
2. O HTTP-2 foi lançado em maio de 2015 como uma evolução do protocolo HTTP/1.1.
3. Uma das principais melhorias do HTTP-2 em relação ao HTTP/1.1 é o suporte a multiplexação, permitindo que várias requisições sejam enviadas simultaneamente em uma única conexão TCP.
4. Outra melhoria do HTTP-2 é o uso de compressão de cabeçalhos, reduzindo a quantidade de dados transferidos entre cliente e servidor.
5. O HTTP-2 também introduz o conceito de priorização de requisições, permitindo que o cliente especifique a ordem de importância de cada requisição.
6. O protocolo HTTP-2 utiliza o mesmo conjunto de métodos de requisição e códigos de status do HTTP/1.1.
7. O HTTP-2 é totalmente retrocompatível com o HTTP/1.1, ou seja, os navegadores que suportam o HTTP-2 também podem utilizar o HTTP/1.1.
8. O HTTP/2 utiliza o mesmo modelo de comunicação cliente-servidor do HTTP/1.1, com o cliente enviando requisições e o servidor respondendo com respostas.
9. O HTTP-2 é uma resposta a problemas de desempenho e latência enfrentados com o crescimento do número de solicitações e a complexidade dos recursos web.
10. A utilização do HTTP-2 pode resultar em melhorias significativas no desempenho, segurança e eficiência na comunicação entre clientes e servidores web.

3. Subtópico:
3. Diferenças entre HTTP-1 e HTTP-2
Assertivas:
1. O HTTP/1 é uma versão mais antiga do protocolo de transferência de hipertexto, enquanto o HTTP/2 é uma versão mais recente.
2. O HTTP/2 introduziu melhorias significativas na velocidade e eficiência do carregamento de páginas da web em comparação ao HTTP/1.
3. O HTTP/1 utiliza uma conexão em série, o que significa que os recursos são transferidos um de cada vez, enquanto o HTTP/2 utiliza multiplexação, permitindo a transferência simultânea de múltiplos recursos.
4. O HTTP/2 oferece suporte a uma maior taxa de transferência de dados, pois permite a compressão de cabeçalhos e a priorização de recursos.
5. O HTTP/2 utiliza o conceito de fluxos, que permitem enviar e receber várias solicitações e respostas em paralelo.
6. O HTTP/1 utiliza cabeçalhos completos em cada solicitação, enquanto o HTTP/2 utiliza cabeçalhos compactados, reduzindo a quantidade de dados a serem transferidos.
7. O HTTP/2 possui uma funcionalidade chamada push, na qual o servidor pode enviar recursos adicionais para o cliente antes que eles sejam explicitamente solicitados.
8. O HTTP/2 é retrocompatível com o HTTP/1, o que significa que os clientes que suportam apenas o HTTP/1 ainda podem se comunicar com servidores HTTP/2, embora não aproveitem todas as melhorias oferecidas.
9. O HTTP/2 melhorou a segurança através do uso obrigatório de criptografia TLS, ao contrário do HTTP/1, que permitia conexões não criptografadas.
10. O HTTP/2 é amplamente adotado por grandes sites e provedores de conteúdo para melhorar o desempenho e a experiência do usuário.

4. Subtópico:
4. Benefícios e desvantagens do uso do HTTP-2
Assertivas:
1. O benefício do uso do HTTP-2 é o aumento significativo da velocidade de carregamento de websites.
2. O benefício do uso do HTTP-2 é a melhora na eficiência das conexões, resultando em menor consumo de dados.
3. O benefício do uso do HTTP-2 é a capacidade de enviar e receber múltiplas requisições simultaneamente em uma única conexão.
4. O benefício do uso do HTTP-2 é a implementação de várias técnicas de compressão de cabeçalhos, reduzindo a quantidade de dados transmitidos.
5. A desvantagem do uso do HTTP-2 é a incompatibilidade com versões anteriores do protocolo HTTP, exigindo atualização dos servidores e clientes.
6. A desvantagem do uso do HTTP-2 é a falta de suporte em alguns navegadores e servidores mais antigos.
7. A desvantagem do uso do HTTP-2 é a necessidade de configurar adequadamente servidores e redes para aproveitar todos os benefícios do protocolo.
8. A desvantagem do uso do HTTP-2 é a possibilidade de sobrecarga de recursos em servidores devido ao grande número de requisições simultâneas.
9. O benefício do uso do HTTP-2 é o suporte nativo e aprimorado a comunicação assíncrona (server push).
10. O benefício do uso do HTTP-2 é a redução da latência e melhora na experiência do usuário ao navegar em websites.

5. Subtópico:
5. Processo de comunicação em sistemas web via HTTP-2 
Assertivas:
1. O HTTP/2 é uma versão do protocolo HTTP que traz melhorias significativas na comunicação entre sistemas web.
2. O HTTP/2 utiliza multiplexação, permitindo que múltiplas solicitações e respostas sejam enviadas simultaneamente no mesmo canal de comunicação.
3. O HTTP/2 utiliza compressão de cabeçalho, reduzindo o tamanho das informações enviadas e melhorando o desempenho da transferência de dados.
4. O HTTP/2 suporta o envio de dados de forma binária, o que possibilita uma interpretação mais eficiente do conteúdo nas aplicações web.
5. O HTTP/2 utiliza o conceito de "Server Push", permitindo que o servidor envie dados adicionais para o cliente antes mesmo de serem solicitados.
6. O HTTP/2 possui suporte embutido para priorização de requisições, garantindo que recursos críticos sejam transferidos primeiro.
7. O HTTP/2 é retrocompatível com o HTTP/1.1, permitindo que aplicações antigas ainda possam ser utilizadas.
8. O HTTP/2 é mais eficiente em conexões de rede de alta latência, diminuindo a latência do tempo de carregamento de páginas em sistemas web.
9. O HTTP/2 utiliza o formato de quadros (frames) para organizar a transferência de dados entre cliente e servidor.
10. O HTTP/2 é amplamente adotado e suportado por diversos navegadores e servidores web populares.

6. Subtópico:
6. Segurança na transmissão de dados com o protocolo HTTP-2 
Assertivas:
1. O protocolo HTTP-2 foi desenvolvido para aumentar a segurança e eficiência na transmissão de dados.
2. O HTTP-2 utiliza a criptografia TLS como recurso padrão para garantir a confidencialidade dos dados transmitidos.
3. O HTTP-2 permite a compressão dos cabeçalhos das requisições e respostas, reduzindo o tamanho das mensagens transmitidas.
4. O protocolo HTTP-2 utiliza a multiplexação de fluxos, permitindo a transmissão simultânea de várias requisições e respostas através de uma única conexão.
5. O HTTP-2 reduz a latência e melhora a performance das aplicações web.
6. O HTTP-2 utiliza o recurso de push de servidor, permitindo o envio proativo de recursos ao cliente antes mesmo de serem solicitados.
7. O protocolo HTTP-2 é compatível com conexões HTTP/1.1, permitindo a coexistência e transição gradual para a nova versão.
8. O HTTP-2 possui suporte nativo para cabeçalhos comprimidos, o que contribui para a diminuição do tempo de transmissão de dados.
9. O HTTP-2 é amplamente utilizado por grandes empresas e provedores de conteúdo, o que reforça sua confiabilidade e segurança.
10. O HTTP-2 possui mecanismos de detecção e correção de erros, garantindo a integridade dos dados transmitidos.

7. Subtópico:
7. Implementação e configuração do protocolo HTTP-2 em servidores web 
Assertivas:
1. A implementação do protocolo HTTP-2 em servidores web visa melhorar o desempenho e a eficiência de comunicação entre navegadores e servidores.
2. O HTTP-2 utiliza multiplexação e compressão de cabeçalhos para reduzir o tempo de carregamento de páginas e aumentar a velocidade de transmissão de dados.
3. O protocolo HTTP-2 é uma versão atualizada do HTTP/1.1 e possui compatibilidade retroativa com versões anteriores.
4. Os servidores web que suportam o HTTP-2 podem oferecer melhores experiências de navegação para os usuários, especialmente em ambientes com conexões lentas ou instáveis.
5. A configuração correta do HTTP-2 requer a habilitação do suporte ao protocolo nos arquivos de configuração do servidor, como o Apache ou o Nginx.
6. A implementação do HTTP-2 em um servidor web requer a instalação de uma biblioteca compatível com esse protocolo, como o OpenSSL ou o nghttp2.
7. O protocolo HTTP-2 utiliza o conceito de fluxos dentro de uma única conexão TCP para melhorar o desempenho e a transmissão ordenada de recursos.
8. A configuração do HTTP-2 pode exigir ajustes e otimizações específicas, dependendo do tipo de servidor web e dos requisitos de aplicação.
9. O HTTP-2 é amplamente suportado por navegadores modernos, incluindo Mozilla Firefox, Google Chrome, Microsoft Edge e Apple Safari.
10. A implementação e configuração corretas do HTTP-2 em servidores web podem aumentar a escalabilidade e a segurança das aplicações online.

8. Subtópico:
8. Compressão de cabeçalho no protocolo HTTP/2 
Assertivas:
1. A compressão de cabeçalho no protocolo HTTP/2 visa reduzir a quantidade de dados necessários para transmitir os cabeçalhos das requisições e respostas.
2. A compressão de cabeçalho no HTTP/2 é ativada por padrão.
3. A compressão de cabeçalho no HTTP/2 utiliza o algoritmo de compressão HPACK.
4. A compressão de cabeçalho no HTTP/2 permite que os cabeçalhos sejam compactados antes da transmissão.
5. A compressão de cabeçalho no HTTP/2 utiliza uma tabela de referência para armazenar os cabeçalhos já compactados anteriormente.
6. A compressão de cabeçalho no HTTP/2 permite que o cliente e o servidor troquem informações sobre a compressão em tempo real.
7. A compressão de cabeçalho no HTTP/2 reduz a sobrecarga da largura de banda para transmitir os cabeçalhos.
8. A compressão de cabeçalho no HTTP/2 ajuda a melhorar o desempenho e a eficiência da comunicação entre o cliente e o servidor.
9. A compressão de cabeçalho no HTTP/2 é mais eficiente do que a compressão utilizada no protocolo HTTP/1.1.
10. A compressão de cabeçalho no HTTP/2 contribui para a redução do tempo de carregamento de páginas da web.

9. Subtópico:
9. Multiplexação em conexões TCP com o uso do protocolo HTTP/2  
Assertivas:
1. O protocolo HTTP/2 utiliza multiplexação para melhorar o desempenho e eficiência das conexões TCP.
2. A multiplexação no HTTP/2 permite o envio simultâneo de múltiplas solicitações e respostas em uma única conexão.
3. O uso da multiplexação no HTTP/2 reduz a latência e o tempo de carregamento das páginas da web.
4. No HTTP/2, a comunicação entre o cliente e o servidor é realizada por meio de fluxos, que são associados a identificadores exclusivos.
5. A multiplexação no HTTP/2 permite que as solicitações e respostas sejam enviadas e recebidas de forma assíncrona, sem a necessidade de aguardar a conclusão de uma operação para iniciar outra.
6. Com a multiplexação do HTTP/2, é possível priorizar determinadas solicitações, garantindo que recursos importantes sejam enviados e renderizados primeiro.
7. A multiplexação no HTTP/2 também ajuda a evitar o bloqueio de solicitações e respostas, aumentando a capacidade de processamento das conexões TCP.
8. O uso da multiplexação no HTTP/2 contribui para reduzir o número de conexões e o consumo de recursos de rede.
9. A multiplexação no HTTP/2 é implementada por meio do envio de quadros de dados intercalados para diferentes fluxos na mesma conexão.  
10. O uso eficiente da multiplexação no HTTP/2 ajuda a melhorar a experiência do usuário, permitindo um carregamento mais rápido e suave de páginas da web.

10. Subtópico:
10. Prior
Assertivas:
1. Prior é o nome de uma marca de papel higiênico muito popular no Brasil.
2. O termo "prior" também pode ser usado como um adjetivo para descrever algo que é mais importante em relação a outras coisas.
3. O uso do tempo de forma eficiente é uma habilidade chave para pessoas que têm prioridades bem definidas.
4. É fundamental estabelecer prioridades claras e realistas para alcançar metas de forma eficaz.
5. Planejar com antecedência é essencial para identificar e gerenciar corretamente as prioridades em situações complexas.
6. O estabelecimento de prioridades ajuda a evitar a procrastinação e a aumentar a produtividade.
7. Uma das técnicas mais conhecidas para priorizar tarefas é a Matriz de Eisenhower, que classifica as atividades em quatro categorias: importante e urgente, importante, urgente e não importante.
8. Identificar as prioridades de acordo com os prazos estabelecidos ajuda a definir uma abordagem adequada para lidar com cada uma delas.
9. Nossas prioridades podem variar de acordo com as circunstâncias individuais e o contexto em que estamos inseridos.
10. Uma boa gestão de prioridades pode contribuir para o equilíbrio entre vida pessoal e profissional.


