Item do edital: 1. sistemas de bancos de dados   
 
1. Subtópico:
1. Conceitos fundamentais de bancos de dados
Assertivas:
1. Um banco de dados é um conjunto organizado de dados relacionados, com a finalidade de atender às necessidades de uma empresa ou organização.
2. O conceito de integridade de bancos de dados garante que as restrições definidas para os dados sejam respeitadas, preservando sua consistência e confiabilidade.
3. Os sistemas gerenciadores de bancos de dados (SGBD) são softwares responsáveis por controlar e gerenciar acesso aos dados, garantindo sua segurança e confiabilidade.
4. O modelo relacional é um dos modelos mais utilizados para projetar bancos de dados, sendo baseado em tabelas, entidades e relacionamentos.
5. O SQL (Structured Query Language) é a linguagem padrão utilizada para a criação, manipulação e consulta de dados em bancos de dados relacionais.
6. A normalização é um processo fundamental para a concepção de bancos de dados relacionais, visando eliminar redundâncias e inconsistências nos dados.
7. Um banco de dados distribuído é aquele que se encontra fisicamente em diferentes locais geográficos, mas é tratado como um único banco de dados lógico.
8. A indexação é uma técnica utilizada para melhorar o desempenho das consultas em bancos de dados, permitindo a recuperação rápida de registros específicos.
9. O backup e a recuperação de dados são processos essenciais para garantir a disponibilidade e a integridade dos dados em um banco de dados.
10. A segurança de dados em bancos de dados envolve diferentes aspectos, como controle de acesso, criptografia e auditoria, visando proteger as informações contra acessos não autorizados.

2. Subtópico:
2. Modelos de bancos de dados: relacional, hierárquico e em rede
Assertivas:
1. O modelo de banco de dados relacional é baseado na teoria dos conjuntos e utiliza tabelas para organizar e relacionar os dados.
2. No modelo hierárquico de banco de dados, os dados são organizados em forma de árvore, com registros hierarquicamente relacionados por meio de ponteiros.
3. O modelo em rede permite a representação de relacionamentos complexos entre registros, utilizando ponteiros múltiplos para estabelecer conexões entre os dados.
4. O modelo relacional é amplamente utilizado na indústria e oferece maior flexibilidade e facilidade de manutenção em comparação com os modelos hierárquico e em rede.
5. O modelo hierárquico é mais adequado para cenários onde as relações entre os dados são do tipo um-para-muitos, como em estruturas organizacionais.
6. O modelo em rede, embora flexível para representar relacionamentos complexos, tende a ser mais complexo em termos de estrutura e consultas em comparação com o modelo relacional.
7. O modelo relacional permite a utilização de chaves primárias e estrangeiras para estabelecer e garantir a integridade dos dados entre tabelas relacionadas.
8. No modelo hierárquico, as operações de atualização de dados podem ser mais complexas e propensas a erros devido à necessidade de atualizar registros relacionados.
9. O modelo em rede permite a representação de muitos-para-muitos relacionamentos, facilitando a modelagem de cenários mais complexos.
10. O modelo relacional é compatível com a linguagem de consulta SQL (Structured Query Language), que permite a manipulação e recuperação eficientes dos dados armazenados.

3. Subtópico:
3. Linguagem SQL: comandos, funções e operações
Assertivas:
1. A linguagem SQL (Structured Query Language) é amplamente utilizada para manipulação e administração de bancos de dados relacionais.
2. O comando SELECT é utilizado para realizar consultas e retornar os dados desejados de uma tabela.
3. O comando INSERT permite a inserção de novas linhas de dados em uma tabela.
4. O comando UPDATE é utilizado para realizar a atualização de valores em uma tabela.
5. O comando DELETE é utilizado para remover linhas de dados de uma tabela.
6. A cláusula WHERE é frequentemente utilizada em conjunto com os comandos SELECT, UPDATE ou DELETE, permitindo a aplicação de condições específicas para filtrar e manipular os dados de forma mais precisa.
7. A função COUNT() retorna o número de registros que satisfazem uma condição específica em uma consulta.
8. A função MAX() retorna o valor máximo de uma coluna especificada.
9. A função MIN() retorna o valor mínimo de uma coluna especificada.
10. A função SUM() retorna a soma dos valores de uma coluna especificada.

4. Subtópico:
4. Normalização e técnicas para evitar redundância de dados
Assertivas:
1. A normalização de dados é um processo importante no projeto de bancos de dados, visando evitar redundância.
2. A técnica de normalização busca eliminar dependências funcionais entre os atributos de uma tabela.
3. O objetivo da normalização é reduzir o espaço de armazenamento necessário para os dados e garantir a integridade das informações.
4. A normalização pode ser dividida em diferentes níveis, como a primeira, segunda e terceira forma normal.
5. A primeira forma normal (1NF) exige que os atributos de uma tabela sejam atômicos, ou seja, indivisíveis.
6. A segunda forma normal (2NF) requer que os atributos de uma tabela dependam completamente de sua chave primária.
7. A terceira forma normal (3NF) garante que os atributos de uma tabela não sejam dependentes transitivamente de sua chave primária.
8. A normalização de dados contribui para a consistência e a precisão das informações armazenadas em um banco de dados.
9. A eliminação de redundância de dados evita inconsistências e facilita a manutenção das bases de dados.
10. Técnicas para evitar redundância de dados incluem o uso adequado de chaves primárias e estrangeiras, normalização e normalização por decomposição.

5. Subtópico:
5. Segurança em bancos de dados: controle de acesso, backup e recuperação 
Assertivas:
1. O controle de acesso em bancos de dados é uma medida fundamental para garantir a segurança das informações, permitindo que apenas usuários autorizados tenham acesso aos dados.
2. O backup de bancos de dados consiste em realizar cópias periódicas das informações, visando a disponibilidade futura dos dados em caso de falhas ou desastres.
3. A recuperação de bancos de dados é um processo que tem o objetivo de restaurar a integridade e a consistência das informações após uma falha ou incidente.
4. A utilização de senhas fortes e políticas de autenticação seguras são medidas essenciais para o controle de acesso em bancos de dados.
5. A criptografia de dados armazenados em bancos de dados é uma técnica eficaz para garantir a confidencialidade das informações.
6. A implementação de políticas de backups regulares é indispensável para a segurança dos dados armazenados em bancos de dados.
7. A redundância de servidores em diferentes locais é uma estratégia comum para garantir a recuperação de dados em caso de falhas nos sistemas de bancos de dados.
8. A utilização de técnicas de replicações síncronas ou assíncronas em bancos de dados é uma forma de assegurar a disponibilidade dos dados em casos de falhas.
9. O controle de acesso em bancos de dados pode ser implementado utilizando-se sistemas de permissões e papéis, restringindo o acesso a recursos específicos para cada usuário.
10. A auditoria de atividades em bancos de dados permite o acompanhamento e a identificação de ações suspeitas ou não autorizadas, contribuindo para a segurança e o monitoramento contínuo das informações.

6. Subtópico:
6. Sistemas gerenciadores de banco de dados (SGBD): características e funcionalidades 
Assertivas:
1. Os SGBDs são responsáveis pelo armazenamento e manipulação eficiente de grandes volumes de dados.
2. As principais características de um SGBD incluem a capacidade de gerenciar concorrência e controlar o acesso aos dados.
3. Um SGBD oferece suporte à definição e manipulação de estruturas de dados complexas, como tabelas, visões e índices.
4. Um SGBD garante a integridade dos dados, por meio da aplicação de restrições de integridade.
5. A recuperação de falhas é uma funcionalidade essencial de um SGBD, permitindo a restauração dos dados em caso de problemas.
6. Os SGBDs oferecem mecanismos de backup e recuperação que garantem a disponibilidade e a segurança dos dados.
7. Um SGBD suporta a linguagem SQL (Structured Query Language) para consultas e manipulação de dados.
8. A utilização de um SGBD facilita a realização de consultas complexas, reduzindo a necessidade de programação manual.
9. Os SGBDs oferecem mecanismos de otimização de consultas, visando melhorar a performance de acesso aos dados.
10. Os SGBDs podem ser classificados em diferentes modelos, como relacional, orientado a objetos e NoSQL, cada um com suas características específicas.

7. Subtópico:
7. Projeto físico e lógico do banco de dados 
Assertivas:
1. O projeto físico do banco de dados é responsável pela definição do esquema de armazenamento de dados em dispositivos de armazenamento físico.
2. O projeto lógico do banco de dados envolve a definição de tabelas, relacionamentos, chaves primárias e estrangeiras, e restrições de integridade.
3. O projeto físico considera aspectos de desempenho, como a definição de índices e particionamento de tabelas, visando otimizar as consultas e operações no banco de dados.
4. Na fase de projeto lógico, é importante considerar a normalização das tabelas para evitar redundância e inconsistência de dados.
5. O projeto lógico é independente da plataforma de implementação do banco de dados, como Oracle, SQL Server ou MySQL.
6. O projeto físico leva em conta os requisitos de armazenamento, como espaço em disco necessário e configurações de hardware, ao definir a estrutura de armazenamento físico do banco de dados.
7. Durante o projeto físico, é importante considerar a disponibilidade e confiabilidade do banco de dados, planejando redundância e estratégias de backup e recuperação.
8. O projeto lógico é representado por meio de diagramas de entidade-relacionamento ou modelos conceituais, facilitando a compreensão e comunicação entre os envolvidos no desenvolvimento do banco de dados.
9. Durante o projeto físico, é possível realizar a otimização de consultas, utilizando técnicas como índices e visões materializadas.
10. A partir do projeto físico, é possível gerar automaticamente o código SQL necessário para a criação do banco de dados, suas tabelas, relacionamentos e restrições.

8. Subtópico:
8. Indexação e hashing para otimização do desempenho do banco
Assertivas:
1. A indexação e o hashing são técnicas utilizadas para otimizar o desempenho do banco de dados.
2. A indexação cria estruturas de dados adicionais que permitem a busca rápida e eficiente de registros.
3. O hashing é uma técnica de indexação que utiliza uma função de hash para mapear os registros em uma estrutura de dados.
4. A indexação e o hashing podem ser utilizados em campos específicos das tabelas do banco de dados.
5. A indexação e o hashing são especialmente úteis em consultas que envolvem operações de busca, como a cláusula WHERE em uma consulta SQL.
6. A criação de índices aumenta o tempo de inserção e atualização de registros em uma tabela.
7. O desempenho do banco de dados pode ser significativamente melhorado com o uso adequado de indexação e hashing.
8. A escolha dos campos a serem indexados deve levar em consideração a frequência de acesso e o tamanho dos registros.
9. É possível ter mais de um índice em uma tabela para otimizar consultas diferentes.
10. A utilização de indexação e hashing pode reduzir a quantidade de leitura e escrita no banco de dados, melhorando a eficiência do sistema como um todo.

9. Subtópico:
9. Transações em banco de dados: propried
Assertivas:
1. Transações em banco de dados garantem a integridade dos dados durante a realização de operações complexas.
2. As transações em banco de dados consistem em uma sequência de operações atomicamente executadas.
3. Uma transação em banco de dados é configurada por meio das instruções BEGIN TRANSACTION, COMMIT e ROLLBACK.
4. Durante uma transação em banco de dados, todas as modificações realizadas nos dados são temporárias até que a transação seja confirmada com o COMMIT.
5. Caso ocorra um erro durante uma transação em banco de dados, é possível desfazer todas as alterações realizadas até aquele momento com o comando ROLLBACK.
6. As transações em banco de dados garantem a consistência dos dados, evitando resultados inconsistentes em caso de erros.
7. A utilização adequada de transações em banco de dados permite o controle efetivo de concorrência entre diversas sessões de acesso aos dados.
8. É possível utilizar o conceito de transações em banco de dados para garantir a durabilidade dos dados mesmo em caso de falhas do sistema.
9. Em uma transação em banco de dados, é possível realizar consultas e atualizações em várias tabelas ao mesmo tempo, garantindo a integridade das operações realizadas.
10. As transações em banco de dados são essenciais para manter a consistência e confiabilidade dos dados em sistemas de alta demanda e concorrência.


