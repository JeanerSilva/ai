Item do edital: 4 Controles e testes de segurança para aplicações Web e Web Services.    
 
1. Subtópico:
1. Conceitos básicos de segurança para aplicações Web e Web Services.
Assertivas:
1. Segurança para aplicações Web envolve medidas como autenticação e autorização para garantir a proteção de dados e recursos.
2. Web Services são serviços disponibilizados na web que também requerem cuidados com segurança para prevenir ataques e vazamento de informações.
3. Criptografia é uma técnica amplamente utilizada para garantir a confidencialidade e integridade dos dados trafegados em aplicações Web e Web Services.
4. A implementação de mecanismos de validação de entrada e saída é essencial para prevenir ataques como injeção de SQL em aplicações Web e Web Services.
5. As boas práticas de desenvolvimento de software, como a utilização de frameworks seguros e atualizações regulares, são fundamentais para garantir a segurança de aplicações Web e Web Services.
6. O uso de HTTPS em aplicações Web e Web Services é fundamental para garantir a comunicação segura entre cliente e servidor.
7. A proteção contra ataques de negação de serviço (DDoS) é um aspecto importante da segurança de aplicações Web e Web Services.
8. A implementação de controles de acesso é fundamental para garantir que apenas usuários autorizados tenham permissão para acessar os recursos de uma aplicação Web ou Web Service.
9. A realização de testes de segurança, como o pentest, é essencial para identificar vulnerabilidades em aplicações Web e Web Services e corrigi-las antes que sejam exploradas por invasores.
10. A utilização de técnicas de log e monitoramento contínuo auxilia na detecção de atividades maliciosas e na resposta rápida a possíveis incidentes de segurança em aplicações Web e Web Services.

2. Subtópico:
2. Tipos de controles de segurança para aplicações Web e Web Services.
Assertivas:
1. O controle de autenticação é essencial para garantir que apenas usuários autorizados tenham acesso a uma aplicação Web ou Web Service.
2. O controle de autorização é imprescindível para definir as permissões de acesso dos usuários a determinadas funcionalidades dentro de uma aplicação Web ou Web Service.
3. A implementação de criptografia nos dados transmitidos em uma aplicação Web ou Web Service ajuda a garantir a confidencialidade das informações.
4. A utilização de firewalls é uma medida importante para proteger uma aplicação Web ou Web Service contra ataques externos.
5. A realização de testes de penetração é uma prática recomendada para identificar vulnerabilidades e falhas de segurança em uma aplicação Web ou Web Service.
6. A implementação de mecanismos de monitoramento em tempo real permite uma detecção proativa de ameaças e possíveis incidentes de segurança em uma aplicação Web ou Web Service.
7. A aplicação regular de patches e atualizações de segurança é fundamental para manter uma aplicação Web ou Web Service protegida contra ameaças conhecidas.
8. A utilização de boas práticas de desenvolvimento, como a validação de entradas e a sanitização de dados, contribui para prevenir vulnerabilidades em uma aplicação Web ou Web Service.
9. A configuração adequada dos servidores e serviços utilizados na aplicação Web ou Web Service é essencial para garantir a integridade e a disponibilidade dos recursos.
10. A definição de políticas de segurança claras e a conscientização dos usuários sobre boas práticas são fundamentais para manter um ambiente seguro em uma aplicação Web ou Web Service.

3. Subtópico:
3. Implementação e manutenção de controles de segurança em aplicações web.
Assertivas:
1. Os controles de segurança em aplicações web devem ser constantemente atualizados para se adaptarem às novas ameaças e vulnerabilidades.
2. A implementação de controles de segurança em aplicações web é fundamental para mitigar riscos de ataques cibernéticos.
3. A adoção de controles de segurança em aplicações web contribui para a proteção de informações sensíveis dos usuários.
4. A utilização de mecanismos de autenticação robustos é um dos controles de segurança essenciais em aplicações web.
5. A implementação de controles de segurança em aplicações web pode envolver a utilização de firewalls de aplicação e sistemas de detecção de intrusão.
6. A codificação segura é um aspecto fundamental na implementação de controles de segurança em aplicações web.
7. A utilização de criptografia adequada é um controle de segurança importante para proteger as informações transmitidas em aplicações web.
8. A realização de testes de segurança é uma etapa fundamental na manutenção dos controles de segurança em aplicações web.
9. A auditoria regular dos controles de segurança em aplicações web é necessária para identificar possíveis falhas e vulnerabilidades.
10. A implementação e manutenção de controles de segurança em aplicações web devem seguir as melhores práticas de segurança da informação.

4. Subtópico:
4. Testes automatizados e manuais para a segurança das aplicações web.
Assertivas:
1. Os testes automatizados são uma estratégia eficiente para garantir a segurança das aplicações web.
2. Os testes manuais são uma abordagem complementar aos testes automatizados para garantir a segurança das aplicações web.
3. Os testes automatizados permitem detectar de forma rápida e precisa possíveis vulnerabilidades nas aplicações web.
4. Os testes manuais podem ser mais eficazes para identificar vulnerabilidades mais complexas ou específicas nas aplicações web.
5. Os testes automatizados são altamente recomendados para a detecção de vulnerabilidades comuns e conhecidas nas aplicações web.
6. Os testes manuais são particularmente úteis na identificação de vulnerabilidades específicas do contexto da aplicação web.
7. A combinação de testes automatizados e manuais ajuda a garantir um nível adequado de segurança para as aplicações web.
8. Os testes automatizados permitem uma execução mais rápida e eficiente dos testes de segurança em comparação com os testes manuais.
9. Os testes manuais são mais propensos a erros humanos, enquanto os testes automatizados fornecem resultados mais consistentes.
10. A utilização de testes automatizados e manuais deve ser realizada de forma contínua para manter a segurança das aplicações web atualizada e mitigar possíveis falhas.

5. Subtópico:
5. Principais vulnerabilidades em aplicações web e como mitigá-las.
Assertivas:
1. A injeção de código é uma das principais vulnerabilidades em aplicações web, sendo mitigada ao implementar validação e sanitização de entradas de usuários.
2. A exposição de informações sensíveis é uma vulnerabilidade comum em aplicações web, sendo mitigada ao adotar técnicas de criptografia e controle de acesso adequados.
3. A autenticação e autorização fraca são vulnerabilidades frequentes em aplicações web, mitigadas ao implementar práticas de segurança como uso de senhas fortes, autenticação em duas etapas e controle de privilégios.
4. A falta de controle de sessão é uma vulnerabilidade comum em aplicações web, sendo mitigada ao implementar mecanismos de autenticação e controle de sessão adequados.
5. A não validação de entradas de usuário é uma vulnerabilidade significativa em aplicações web, mitigada ao implementar filtros e validação correta de dados de entrada.
6. A falta de proteção contra ataques de força bruta é uma vulnerabilidade frequente em aplicações web, mitigada ao implementar bloqueio de contas após múltiplas tentativas de login fracassadas.
7. A vulnerabilidade de ataques de cross-site scripting (XSS) é comum em aplicações web, sendo mitigada ao usar sanitização e escape de dados de saída corretamente.
8. A exposição de APIs sem autenticação adequada é uma vulnerabilidade em aplicações web, mitigada ao implementar autenticação e autorização adequadas para acessar recursos protegidos.
9. A falta de atualização regular de componentes e bibliotecas de terceiros é uma vulnerabilidade significativa em aplicações web, sendo mitigada ao manter um processo de gestão de vulnerabilidades e correções regulares.
10. A manipulação inadequada de erros é uma vulnerabilidade comum em aplicações web, sendo mitigada ao implementar tratamento adequado de erros e não exibir informações sensíveis ao usuário final.

6. Subtópico:
6. Protocolos de segurança na internet: HTTPS, SSL/TLS, entre outros.
Assertivas:
1. O protocolo HTTPS é uma extensão do protocolo HTTP que utiliza criptografia para garantir a segurança das informações transmitidas.

2. O protocolo SSL/TLS é frequentemente utilizado para estabelecer uma conexão segura entre um navegador e um servidor web.

3. O SSL/TLS funciona utilizando certificados digitais para autenticar os servidores e garantir a confidencialidade, integridade e autenticidade das informações transmitidas.

4. O protocolo TLS é a versão atualizada e mais segura do protocolo SSL.

5. Os certificados digitais utilizados pelo SSL/TLS são emitidos por autoridades certificadoras confiáveis para garantir a autenticidade das informações.

6. Ao acessar um site com a conexão HTTPS, é possível verificar a segurança da comunicação por meio do ícone de cadeado exibido no navegador.

7. Além do HTTPS e do SSL/TLS, existem outros protocolos de segurança, como SFTP (Secure File Transfer Protocol), SSH (Secure Shell) e IPsec (Internet Protocol Security).

8. O HTTPS é amplamente utilizado em sites que lidam com informações sensíveis, como instituições financeiras e lojas online.

9. O uso correto dos protocolos de segurança na internet é fundamental para proteger a privacidade e evitar a interceptação de dados por terceiros mal-intencionados.

10. É importante manter os protocolos de segurança atualizados, uma vez que novas vulnerabilidades podem ser descobertas e corrigidas regularmente.

7. Subtópico:
7. Autenticação, autorização e controle de acesso em aplicações web.
Assertivas:
1. Autenticação em aplicações web refere-se ao processo de confirmar a identidade de um usuário antes de conceder acesso aos recursos do sistema.
2. A autorização em aplicações web envolve a atribuição de permissões específicas a usuários autenticados para acessar determinados recursos do sistema.
3. O controle de acesso em aplicações web é responsável por gerenciar e regular o acesso aos recursos do sistema, garantindo que somente usuários autorizados possam utilizá-los.
4. Um dos métodos mais comuns de autenticação em aplicações web é o uso de senhas, que devem ser armazenadas de forma segura.
5. A autenticação de dois fatores é uma medida adicional de segurança que requer a apresentação de algo que o usuário possui (como um token ou smartphone) além da senha.
6. A autorização em aplicações web é frequentemente controlada por meio de roles, que definem as permissões atribuídas a um usuário específico.
7. As boas práticas de controle de acesso em aplicações web recomendam o uso de políticas baseadas em princípios como o princípio do mínimo privilégio.
8. A técnica de autenticação via token, como o uso de JSON Web Tokens (JWT), permite a autenticação de um usuário sem a necessidade de armazenar informações de sessão no servidor.
9. O OAuth é um protocolo de autorização utilizado em aplicações web para permitir que os usuários acessem recursos de outros aplicativos sem compartilhar suas credenciais.
10. A implementação adequada de autenticação, autorização e controle de acesso em aplicações web é fundamental para garantir a segurança dos dados e proteger a privacidade dos usuários.

8. Subtópico:
8. Segurança em APIs e serviços da web: SOAP, RESTful, entre outros
Assertivas:
1. A segurança em APIs e serviços da web, como SOAP e RESTful, é fundamental para proteger dados sensíveis e prevenir acessos não autorizados.
2. A autenticação é um dos pilares da segurança em APIs e serviços da web, garantindo que apenas usuários legítimos tenham acesso aos recursos.
3. A autorização é outra medida de segurança essencial, permitindo ao sistema controlar as permissões de cada usuário de acordo com suas necessidades.
4. A criptografia dos dados trafegados nas APIs e serviços da web é uma prática recomendada para evitar que informações confidenciais sejam interceptadas e lidas por terceiros.
5. A utilização de tokens de segurança é uma técnica comum para autenticar e autorizar a comunicação entre aplicativos, garantindo a integridade e a confidencialidade dos dados.
6. A implementação de firewalls e filtros de pacotes é uma medida para proteger APIs e serviços da web contra ataques externos, como ataques de negação de serviço (DDoS).
7. O uso de técnicas de validação de entrada e saída, como a sanitização de dados fornecidos por usuários, é importante para prevenir ataques de injeção de código malicioso em APIs e serviços da web.
8. A execução regular de testes de segurança, como testes de penetração, ajuda a identificar e corrigir vulnerabilidades nos APIs e serviços da web.
9. A implementação de logs de auditoria em APIs e serviços da web permite rastrear e analisar eventos de segurança, facilitando a detecção de atividades suspeitas.
10. A atualização regular de bibliotecas e frameworks utilizados nas APIs e serviços da web é uma prática recomendada para garantir que eventuais vulnerabilidades sejam corrigidas.


